apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  annotations: 
    app.openshift.io/vcs-uri: 'https://github.com/sa-mw-dach/octo-happiness-template-java'
  labels:
    {{- include "app.defaultLabels" . | indent 4 }}
    app.openshift.io/runtime: quarkus
    app.openshift.io/runtime-namespace: {{ .Release.Namespace }}
    app.openshift.io/runtime-version: {{ .Chart.AppVersion }}
  name: {{ include "app.fullname" . }}
spec:
  replicas: {{ .Values.deployment.replicas | default 1 }}
  selector:
    {{- include "app.matchLabels" . | indent 4 }}
  triggers:
  - type: ConfigChange 
  - imageChangeParams:
      automatic: true
      containerNames:
      - {{ include "app.fullname" . }}
      from:
        kind: ImageStreamTag
        name: "{{ include "app.fullname" . }}:{{ .Chart.AppVersion }}"
    type: ImageChange  
  strategy:
    type: Rolling      
  template:
    metadata:
      labels:
        {{- include "app.defaultLabels" . | indent 8 }}
    spec:
      containers:
        - image: "{{ include "app.fullname" . }}:{{ .Chart.AppVersion }}"
          imagePullPolicy: IfNotPresent
          name: {{ include "app.fullname" . }}
          ports:
            - name: main
              containerPort: 8080
              protocol: TCP
          envFrom:
            - configMapRef:
                name: {{ include "app.fullname" . }}-config
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          {{- if .Values.deployment.includeHealthChecks }}        
          readinessProbe:
            httpGet:
              path: /q/health/ready
              port: 8080
              scheme: HTTP
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /q/health/live
              port: 8080
              scheme: HTTP
            timeoutSeconds: 2
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          {{- end }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30