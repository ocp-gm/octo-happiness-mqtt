apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  annotations: 
    app.openshift.io/vcs-uri: 'https://github.com/sa-mw-dach/octo-happiness-template-java'
  labels:
    app: octo-happiness-template-java
  name: {{ .Release.Name }}-deployment-config
spec:
  replicas: {{ .Values.deployment.replicas | default 1 }}
  selector:
    deployment: {{ .Release.Name }}
  triggers:
  - type: ConfigChange 
  - imageChangeParams:
      automatic: true
      containerNames:
      - {{ .Values.deployment.image }}
      from:
        kind: ImageStreamTag
        name: {{ .Values.deployment.image }}:{{ .Values.deployment.version }}
    type: ImageChange  
  strategy:
    type: Rolling      
  template:
    metadata:
      labels:
        deployment: {{ .Release.Name }}
    spec:
      containers:
        - image: "{{ .Values.deployment.image }}:{{ .Values.deployment.version }}"
          imagePullPolicy: IfNotPresent
          name: octo-happiness-template-java
          ports:
            - containerPort: 8080
              protocol: TCP
          envFrom:
            - configMapRef:
                name: {{ .Release.Name }}-config
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          {{- if .Values.deployment.includeHealthChecks }}        
          readinessProbe:
            httpGet:
              path: /q/health/ready
              port: 8080
              scheme: HTTP
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /q/health/live
              port: 8080
              scheme: HTTP
            timeoutSeconds: 2
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          {{- end }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30